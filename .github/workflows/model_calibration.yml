name: Periodic Model Calibration

on:
  schedule:
    - cron: "0 0 * * *" #minutes, hours, day, month, day of week
permissions:
  contents: write
jobs:
  retrain:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Github_Labs/Lab2

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Generate and Store Timestamp
        run: |
          timestamp=$(date '+%Y%m%d%H%M%S')
          echo "$timestamp" > timestamp.txt
        id: timestamp

      - name: Check File Permissions
        run: |
          ls -l ./src/train_model.py

      - name: Set File Permissions
        run: |
          chmod +x ./src/train_model.py

      - name: Retrain Model
        run: |
          timestamp=$(cat timestamp.txt) # Use the timestamp in your training script
          python ./src/train_model.py --timestamp "$timestamp"

      - name: Evaluate Model and Log Metrics
        run: |
          timestamp=$(cat timestamp.txt) # Use the timestamp in your training script
          python ./src/evaluate_model.py  --timestamp "$timestamp" # Assuming you have a script for model evaluation
          metrics_filename="${timestamp}_metrics.json"
          mv $metrics_filename $GITHUB_WORKSPACE/Github_Labs/Lab2/metrics/$metrics_filename
        continue-on-error: false # Continue even if evaluation fails

      - name: Store and Version the New Model
        run: |
          timestamp=$(cat timestamp.txt)
          model_filename="model_${timestamp}_rf_model.joblib"
          echo "Current directory: $(pwd)"
          echo "Looking for file: $model_filename"
          echo "Files in current directory:"
          ls -la
          mkdir -p $GITHUB_WORKSPACE/Github_Labs/Lab2/models/
          mv working_data/$model_filename $GITHUB_WORKSPACE/Github_Labs/Lab2/models/$model_filename

      - name: Commit and Push Changes
        run: |
          git config --global user.email "145399379+Rakshith-Reddy-K@users.noreply.github.com"
          git config --global user.name "Rakshith-Reddy-K"
          git add $GITHUB_WORKSPACE/Github_Labs/Lab2/metrics/$metrics_filename $GITHUB_WORKSPACE/Github_Labs/Lab2/models/$model_filename
          git commit -m "Add metrics and updated model"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
